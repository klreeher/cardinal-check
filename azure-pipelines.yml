# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- "*"

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'
  GLOBAL_ISCI: true


steps:
- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     msbuildArgs: '/p:PackageLocation="$(build.artifactStagingDirectory)"'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
#     maximumCpuCount: false
- script: |
    dotnet build --configuration $(buildConfiguration) --output "$(Agent.TempDirectory)"


# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
#     testAssemblyVer2: |
#       **\\tests-unit.dll
#       !**\*TestAdapter.dll
#       !**\obj\**
#       !**\bin\**\ref\**
#     #testFiltercriteria: # Optional
#     runInParallel: true # Optional
#     otherConsoleOptions: '--logger:nunit;LogFileName={assembly}.results.xml' # Optional
#     publishRunAttachments: true # Optional
#     failOnMinTestsNotRun: true # Optional
#     minimumExpectedTests: '1' # Optional
#     #diagnosticsEnabled: false # Optional
#     collectDumpOn: 'always' # Optional. Options: onAbortOnly, always, never
#     #rerunFailedTests: False # Optional
#     #rerunType: 'basedOnTestFailurePercentage' # Optional. Options: basedOnTestFailurePercentage, basedOnTestFailureCount
#     #rerunFailedThreshold: '30' # Optional
#     #rerunFailedTestCasesMaxLimit: '5' # Optional
#     #rerunMaxAttempts: '3' # Optional


- script: |
    dotnet test $(Agent.TempDirectory)\tests-unit.dll --logger:nunit -- NUnit.ShowInternalProperties=true 

- task: PublishTestResults@2
  displayName: 'Publish Unit Test Results'
  condition: succeededOrFailed() # because otherwise we won't know what tests failed
  inputs: 
    testResultsFormat: 'NUnit'
    testResultsFiles: '**\TestResults.xml'
    searchFolder: '$(Agent.TempDirectory)'
    failTaskOnFailedTests: true